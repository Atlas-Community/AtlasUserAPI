// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using AtlasUserAPI.BanJSON;
//
//    var succesResponseBan = SuccesResponseBan.FromJson(jsonString);

namespace SanctionSystem.BanJSON
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Ban
    {
        [JsonProperty("steamid64", NullValueHandling = NullValueHandling.Ignore)]
        public string Steamid64 { get; set; }

        [JsonProperty("ip", NullValueHandling = NullValueHandling.Ignore)]
        public string Ip { get; set; }

        [JsonProperty("bannedAt")]
        public long BannedAt { get; set; }

        [JsonProperty("bannedUntil")]
        public long BannedUntil { get; set; }

        [JsonProperty("by")]
        public string By { get; set; }

        [JsonProperty("reason", NullValueHandling = NullValueHandling.Ignore)]
        public string Reason { get; set; }
    }

    public partial class Ban
    {
        public static Ban FromJson(string json) => JsonConvert.DeserializeObject<Ban>(json, SanctionSystem.BanJSON.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Ban self) => JsonConvert.SerializeObject(self, SanctionSystem.BanJSON.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
